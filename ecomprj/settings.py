"""
Django settings for ecomprj project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

from django.contrib.messages import constants as messages
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-g@_r^^8*nwj0n0^u+bw@h0sk@nhtnduf0%no2_xhu2^e*yn$1("

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
SECURE_CROSS_ORIGIN_OPENER_POLICY='same-origin-allow-popups'

# Application definition

INSTALLED_APPS = [
    "jazzmin",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Third party
    
    "taggit",
    "django_ckeditor_5",

    # custom
    "core",
    "userauths",
    "cart",
    "wishlist",
    "checkout",
    "order",
    "contact",
    "useradmin",

]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "ecomprj.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "core.context_processor.default",
                "cart.context_processor.cart_view",
                "wishlist.context_processor.wishlist_view",
            ],
        },
    },
]

WSGI_APPLICATION = "ecomprj.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'staticfiles')
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


JAZZMIN_SETTINGS = {
    'site_header': 'Mamy shop',
    'site_brand': 'Your order, we deliver',
    'site_logo': '/assets/imgs/theme/logo.svg',
    'copyright': "mamy@niaina.com"
}

AUTH_USER_MODEL = 'userauths.User'

MESSAGE_TAGS = {
    messages.ERROR: "danger",
}

CKEDITOR_5_UPLOAD_PATH = 'uploads/'


customColorPalette = [
    {'color': 'hsl(4, 90%, 58%)', 'label': 'Red'},
    {'color': 'hsl(340, 82%, 52%)', 'label': 'Pink'},
    {'color': 'hsl(291, 64%, 42%)', 'label': 'Purple'},
    {'color': 'hsl(262, 52%, 47%)', 'label': 'Deep Purple'},
    {'color': 'hsl(231, 48%, 48%)', 'label': 'Indigo'},
    {'color': 'hsl(207, 90%, 54%)', 'label': 'Blue'},
    {'color': 'hsl(89, 80%, 42%)', 'label': 'Green'},
    {'color': 'hsl(54, 100%, 62%)', 'label': 'Yellow'},
    {'color': 'hsl(30, 100%, 50%)', 'label': 'Orange'},
    {'color': 'hsl(0, 0%, 0%)', 'label': 'Black'},
    {'color': 'hsl(0, 0%, 100%)', 'label': 'White'},
]

CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': [
            'heading', '|', 'bold', 'italic', 'underline', 'strikethrough', 'link', '|',
            'bulletedList', 'numberedList', 'todoList', '|', 'blockQuote', 'insertTable', '|', 'undo', 'redo'
        ],
        'image': {
            'toolbar': [
                'imageTextAlternative', 'toggleImageCaption', 'imageStyle:alignLeft',
                'imageStyle:alignCenter', 'imageStyle:alignRight', '|', 'resizeImage'
            ],
            'styles': [
                'alignLeft', 'alignCenter', 'alignRight'
            ]
        },
        'table': {
            'contentToolbar': ['tableColumn', 'tableRow', 'mergeTableCells'],
            'tableProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            },
            'tableCellProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            }
        },
        'heading': {
            'options': [
                {'model': 'paragraph', 'view': 'p', 'title': 'Paragraph', 'class': 'ck-heading_paragraph'},
                {'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1'},
                {'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2'},
                {'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3'}
            ]
        },
        'fontColor': {
            'colors': customColorPalette
        },
        'fontBackgroundColor': {
            'colors': customColorPalette
        },
        'highlight': {
            'options': [
                {'model': 'yellowMarker', 'class': 'marker-yellow', 'title': 'Yellow marker', 'color': 'var(--ck-highlight-marker-yellow)', 'type': 'marker'},
                {'model': 'greenMarker', 'class': 'marker-green', 'title': 'Green marker', 'color': 'var(--ck-highlight-marker-green)', 'type': 'marker'},
                {'model': 'pinkMarker', 'class': 'marker-pink', 'title': 'Pink marker', 'color': 'var(--ck-highlight-marker-pink)', 'type': 'marker'},
                {'model': 'blueMarker', 'class': 'marker-blue', 'title': 'Blue marker', 'color': 'var(--ck-highlight-marker-blue)', 'type': 'marker'},
                {'model': 'redPen', 'class': 'pen-red', 'title': 'Red pen', 'color': 'var(--ck-highlight-pen-red)', 'type': 'pen'},
                {'model': 'greenPen', 'class': 'pen-green', 'title': 'Green pen', 'color': 'var(--ck-highlight-pen-green)', 'type': 'pen'}
            ]
        }
    },
    'extends': {
        'blockToolbar': [
            'paragraph', 'heading1', 'heading2', 'heading3', '|',
            'bulletedList', 'numberedList', '|', 'blockQuote', 'codeBlock'
        ],
        'toolbar': [
            'heading', '|', 'bold', 'italic', 'underline', 'strikethrough', 'link', 'bulletedList', 'numberedList', 'todoList', '|',
            'blockQuote', 'insertTable', 'mediaEmbed', '|', 'undo', 'redo', '|', 'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor',
            'highlight', '|', 'removeFormat', 'sourceEditing', 'code', 'subscript', 'superscript'
        ],
        'image': {
            'toolbar': [
                'imageTextAlternative', 'toggleImageCaption', 'imageStyle:alignLeft',
                'imageStyle:alignCenter', 'imageStyle:alignRight', '|', 'resizeImage'
            ],
            'styles': [
                'alignLeft', 'alignCenter', 'alignRight'
            ]
        },
        'table': {
            'contentToolbar': ['tableColumn', 'tableRow', 'mergeTableCells', 'tableProperties', 'tableCellProperties'],
            'tableProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            },
            'tableCellProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            }
        },
        'heading': {
            'options': [
                {'model': 'paragraph', 'view': 'p', 'title': 'Paragraph', 'class': 'ck-heading_paragraph'},
                {'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1'},
                {'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2'},
                {'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3'}
            ]
        },
        'fontColor': {
            'colors': customColorPalette
        },
        'fontBackgroundColor': {
            'colors': customColorPalette
        },
        'highlight': {
            'options': [
                {'model': 'yellowMarker', 'class': 'marker-yellow', 'title': 'Yellow marker', 'color': 'var(--ck-highlight-marker-yellow)', 'type': 'marker'},
                {'model': 'greenMarker', 'class': 'marker-green', 'title': 'Green marker', 'color': 'var(--ck-highlight-marker-green)', 'type': 'marker'},
                {'model': 'pinkMarker', 'class': 'marker-pink', 'title': 'Pink marker', 'color': 'var(--ck-highlight-marker-pink)', 'type': 'marker'},
                {'model': 'blueMarker', 'class': 'marker-blue', 'title': 'Blue marker', 'color': 'var(--ck-highlight-marker-blue)', 'type': 'marker'},
                {'model': 'redPen', 'class': 'pen-red', 'title': 'Red pen', 'color': 'var(--ck-highlight-pen-red)', 'type': 'pen'},
                {'model': 'greenPen', 'class': 'pen-green', 'title': 'Green pen', 'color': 'var(--ck-highlight-pen-green)', 'type': 'pen'}
            ]
        },
        'list': {
            'properties': {
                'styles': True,
                'startIndex': True,
                'reversed': True,
            }
        }
    }
}
